c++:
vector<int> leaders(vector<int>& arr) {
    int n = arr.size();
    int leader = arr[n - 1];
    vector<int> res;
    res.push_back(leader);

    for (int i = n - 2; i >= 0; i--) {
        if (arr[i] >= leader) {
            leader = arr[i];
            res.push_back(leader);
        }
    }

    reverse(res.begin(), res.end());
    return res;
}
java:
 public static List<Integer> leaders(int[] arr) {
        int n = arr.length;
        int leader = arr[n - 1];
        List<Integer> res = new ArrayList<>();
        res.add(leader);

        for (int i = n - 2; i >= 0; i--) {
            if (arr[i] >= leader) {
                leader = arr[i];
                res.add(leader);
            }
        }

        Collections.reverse(res); // Reverse the list before returning
        return res;
    }
python:
def leaders(arr):
    n = len(arr)
    leader = arr[-1]
    res = [leader]

    for i in range(n - 2, -1, -1):
        if arr[i] >= leader:
            leader = arr[i]
            res.append(leader)

    return res[::-1]  # Reverse the list before returning
