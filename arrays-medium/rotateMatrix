c++:
void rotateBruteForce(vector<vector<int>>& matrix) {
    int n = matrix.size();
    vector<vector<int>> temp(n, vector<int>(n, 0));

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            temp[j][n - 1 - i] = matrix[i][j];
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            matrix[i][j] = temp[i][j];
        }
    }
}
java:
public static void rotateBruteForce(int[][] matrix) {
        int n = matrix.length;
        int[][] temp = new int[n][n];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                temp[j][n - 1 - i] = matrix[i][j];
            }
        }

        for (int i = 0; i < n; i++) {
            System.arraycopy(temp[i], 0, matrix[i], 0, n);
        }
    }
python:
def rotate_brute_force(matrix):
    n = len(matrix)
    temp = [[0] * n for _ in range(n)]

    for i in range(n):
        for j in range(n):
            temp[j][n - 1 - i] = matrix[i][j]

    for i in range(n):
        for j in range(n):
            matrix[i][j] = temp[i][j]
