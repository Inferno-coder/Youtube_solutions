c++:
 int removeDuplicates(vector<int>& nums) {
        int i=0,j=0,n=nums.size();
        while(j<n-1){
            if(nums[j]!=nums[j+1]){
                nums[i]=nums[j];
                i++;
            }
            j++;
        }
        nums[i]=nums[nums.size()-1];
        return i+1;
    }
java:
class Solution {
    public int removeDuplicates(int[] nums) {
        int i = 0, j = 0, n = nums.length;
        while (j < n - 1) {
            if (nums[j] != nums[j + 1]) {
                nums[i] = nums[j];
                i++;
            }
            j++;
        }
        nums[i] = nums[n - 1];
        return i + 1;
    }
}

python:
class Solution:
    def removeDuplicates(self, nums):
        i, j, n = 0, 0, len(nums)
        while j < n - 1:
            if nums[j] != nums[j + 1]:
                nums[i] = nums[j]
                i += 1
            j += 1
        nums[i] = nums[-1]
        return i + 1
